{
  "_args": [
    [
      {
        "raw": "i18next-localstorage-cache@^1.1.0",
        "scope": null,
        "escapedName": "i18next-localstorage-cache",
        "name": "i18next-localstorage-cache",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/home/user/work/version/reaction"
    ]
  ],
  "_from": "i18next-localstorage-cache@>=1.1.0 <2.0.0",
  "_id": "i18next-localstorage-cache@1.1.1",
  "_inCache": true,
  "_location": "/i18next-localstorage-cache",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/i18next-localstorage-cache-1.1.1.tgz_1494357425190_0.07353738811798394"
  },
  "_npmUser": {
    "name": "jamuhl",
    "email": "jan.muehlemann@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "i18next-localstorage-cache@^1.1.0",
    "scope": null,
    "escapedName": "i18next-localstorage-cache",
    "name": "i18next-localstorage-cache",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/i18next-localstorage-cache/-/i18next-localstorage-cache-1.1.1.tgz",
  "_shasum": "575256cc35e8cb2d88148f754766fdd2d24bb1b7",
  "_shrinkwrap": null,
  "_spec": "i18next-localstorage-cache@^1.1.0",
  "_where": "/home/user/work/version/reaction",
  "author": {
    "name": "Jan MÃ¼hlemann",
    "email": "jan.muehlemann@gmail.com",
    "url": "https://github.com/jamuhl"
  },
  "bugs": {
    "url": "https://github.com/i18next/i18next-localStorage-cache/issues"
  },
  "dependencies": {},
  "description": "caching layer for i18next using browsers localStorage",
  "devDependencies": {
    "babel-cli": "6.23.0",
    "babel-core": "6.23.1",
    "babel-eslint": "7.1.1",
    "babel-preset-es2015": "6.22.0",
    "babel-preset-es2015-native-modules": "^6.9.4",
    "babel-preset-es2015-rollup": "3.0.0",
    "babel-preset-stage-0": "^6.22.0",
    "eslint": "3.16.1",
    "eslint-config-airbnb": "14.1.0",
    "mkdirp": "0.5.1",
    "rimraf": "2.6.1",
    "rollup": "0.41.4",
    "rollup-plugin-babel": "2.7.1",
    "rollup-plugin-node-resolve": "2.0.0",
    "rollup-plugin-uglify": "1.0.1",
    "yargs": "6.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "575256cc35e8cb2d88148f754766fdd2d24bb1b7",
    "tarball": "https://registry.npmjs.org/i18next-localstorage-cache/-/i18next-localstorage-cache-1.1.1.tgz"
  },
  "gitHead": "14ecc9ea40d045a85404cc74c5b89e213ddfc608",
  "homepage": "https://github.com/i18next/i18next-localStorage-cache",
  "jsnext:main": "dist/es/index.js",
  "keywords": [
    "i18next",
    "i18next-cache"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "adrai",
      "email": "adriano@raiano.ch"
    },
    {
      "name": "jamuhl",
      "email": "jan.muehlemann@gmail.com"
    }
  ],
  "name": "i18next-localstorage-cache",
  "optionalDependencies": {},
  "readme": "# Introduction\n\nThis is a i18next cache layer to be used in the browser. It will load and cache resources from localStorage.\n\n# Getting started\n\nSource can be loaded via [npm](https://www.npmjs.com/package/i18next-localstorage-cache), bower or [downloaded](https://github.com/i18next/i18next-localStorage-cache/blob/master/i18nextLocalStorageCache.min.js) from this repo.\n\n- If you don't use a module loader it will be added to window.i18nextLocalStorageCache\n\n```\n# npm package\n$ npm install i18next-localstorage-cache\n\n# bower\n$ bower install i18next-localstorage-cache\n```\n\nWiring up:\n\n```js\nimport i18next from 'i18next';\nimport Cache from 'i18next-localstorage-cache';\n\ni18next\n  .use(Cache)\n  .init(i18nextOptions);\n```\n\nAs with all modules you can either pass the constructor function (class) to the i18next.use or a concrete instance.\n\n## Cache Options\n\n**hint:** the cache plugin is disabled by default. Enable it by setting `enabled: true` in init options for production usage.\n\n```js\n{\n  // turn on or off\n  enabled: false,\n\n  // prefix for stored languages\n  prefix: 'i18next_res_',\n\n  // expiration\n  expirationTime: 7*24*60*60*1000,\n\n  // language versions\n  versions: {}\n};\n```\n\n- Contrary to cookies behavior, the cache will respect updates to `expirationTime`. If you set 7 days and later update to 10 days, the cache will persist for 10 days\n\n- Passing in a `versions` object (ex.: `versions: { en: 'v1.2', fr: 'v1.1' }`) will give you control over the cache based on translations version. This setting works along `expirationTime`, so a cached translation will still expire even though the version did not change. You can still set `expirationTime` far into the future to avoid this\n\n\nOptions can be passed in:\n\n**preferred** - by setting options.cache in i18next.init:\n\n```js\nimport i18next from 'i18next';\nimport Cache from 'i18next-localstorage-cache';\n\ni18next\n  .use(Cache)\n  .init({\n    cache: options\n  });\n```\n\non construction:\n\n```js\n  import Cache from 'i18next-localstorage-cache';\n  const cache = new Cache(null, options);\n```\n\nvia calling init:\n\n```js\n  import Cache from 'i18next-localstorage-cache';\n  const cache = new Cache();\n  cache.init(options);\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "build": "npm run clean && npm run build:cjs && npm run build:es && npm run build:umd && npm run copy",
    "build:amd": "rollup -c rollup.config.js --format amd && rollup -c rollup.config.js --format umd --uglify",
    "build:cjs": "babel src --out-dir dist/commonjs",
    "build:es": "BABEL_ENV=jsnext babel src --out-dir dist/es",
    "build:iife": "rollup -c rollup.config.js --format iife && rollup -c rollup.config.js --format iife --uglify",
    "build:umd": "rollup -c rollup.config.js --format umd && rollup -c rollup.config.js --format umd --uglify",
    "clean": "rimraf dist && mkdirp dist",
    "copy": "cp ./dist/umd/i18nextLocalStorageCache.min.js ./i18nextLocalStorageCache.min.js && cp ./dist/umd/i18nextLocalStorageCache.js ./i18nextLocalStorageCache.js",
    "postversion": "git push && git push --tags",
    "preversion": "npm run build && git push"
  },
  "version": "1.1.1"
}
