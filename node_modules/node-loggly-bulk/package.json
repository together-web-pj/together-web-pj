{
  "_args": [
    [
      {
        "raw": "node-loggly-bulk@^2.0.0",
        "scope": null,
        "escapedName": "node-loggly-bulk",
        "name": "node-loggly-bulk",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/home/user/work/version/reaction"
    ]
  ],
  "_from": "node-loggly-bulk@>=2.0.0 <3.0.0",
  "_id": "node-loggly-bulk@2.0.0",
  "_inCache": true,
  "_location": "/node-loggly-bulk",
  "_nodeVersion": "7.7.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/node-loggly-bulk-2.0.0.tgz_1496903616279_0.3597630823496729"
  },
  "_npmUser": {
    "name": "loggly-hoover",
    "email": "sjain@loggly.com"
  },
  "_npmVersion": "4.6.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-loggly-bulk@^2.0.0",
    "scope": null,
    "escapedName": "node-loggly-bulk",
    "name": "node-loggly-bulk",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-loggly-bulk/-/node-loggly-bulk-2.0.0.tgz",
  "_shasum": "e4cf94398d798eba1243052c2f26d7dd9b92104d",
  "_shrinkwrap": null,
  "_spec": "node-loggly-bulk@^2.0.0",
  "_where": "/home/user/work/version/reaction",
  "author": {
    "name": "Charlie Robbins",
    "email": "charlie.robbins@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/loggly/node-loggly-bulk/issues"
  },
  "dependencies": {
    "json-stringify-safe": "5.0.x",
    "request": ">=2.76.0 <3.0.0",
    "timespan": "2.3.x"
  },
  "description": "A client implementation for Loggly cloud Logging-as-a-Service API",
  "devDependencies": {
    "common-style": "^3.1.0",
    "nock": "~7.2.2",
    "vows": "0.8.x"
  },
  "directories": {},
  "dist": {
    "shasum": "e4cf94398d798eba1243052c2f26d7dd9b92104d",
    "tarball": "https://registry.npmjs.org/node-loggly-bulk/-/node-loggly-bulk-2.0.0.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "gitHead": "ea918224b6a88123cb73dda0227cb25a207c2170",
  "homepage": "https://github.com/loggly/node-loggly-bulk#readme",
  "keywords": [
    "cloud computing",
    "api",
    "logging",
    "loggly"
  ],
  "license": "MIT",
  "main": "./lib/loggly",
  "maintainers": [
    {
      "name": "loggly",
      "email": "sjain@loggly.com"
    },
    {
      "name": "psqshweta",
      "email": "shweta.jain@psquickit.com"
    },
    {
      "name": "psquickitjayant",
      "email": "psurothiya@loggly.com"
    }
  ],
  "name": "node-loggly-bulk",
  "optionalDependencies": {},
  "readme": "# node-loggly-bulk\r\n\r\n[![Version npm](https://img.shields.io/npm/v/node-loggly-bulk.svg?style=flat-square)](https://www.npmjs.com/package/node-loggly-bulk)[![npm Downloads](https://img.shields.io/npm/dm/node-loggly-bulk.svg?style=flat-square)](https://www.npmjs.com/package/node-loggly-bulk)\r\n\r\n[![NPM](https://nodei.co/npm/node-loggly-bulk.png?downloads=true&downloadRank=true)](https://nodei.co/npm/node-loggly-bulk/)\r\n\r\nA client implementation for Loggly in node.js. Check out Loggly's [Node logging documentation](https://www.loggly.com/docs/nodejs-logs/) for more.\r\n\r\n## Usage\r\n\r\nThe `node-loggly-bulk` library is compliant with the [Loggly API][api]. Using `node-loggly-bulk` is easy for a variety of scenarios: logging, working with devices and inputs, searching, and facet searching.\r\n\r\n### Getting Started\r\nBefore we can do anything with Loggly, we have to create a client with valid credentials. We will authenticate for you automatically:\r\n\r\n``` js\r\n  var loggly = require('node-loggly-bulk');\r\n\r\n  var client = loggly.createClient({\r\n    token: \"your-really-long-input-token\",\r\n    subdomain: \"your-subdomain\",\r\n    auth: {\r\n      username: \"your-username\",\r\n      password: \"your-password\"\r\n    },\r\n    //\r\n    // Optional: Tag to send with EVERY log message\r\n    //\r\n    tags: ['global-tag']\r\n  });\r\n```\r\n\r\n### Logging\r\nThere are two ways to send log information to Loggly via node-loggly-bulk. The first is to simply call client.log with an appropriate input token:\r\n\r\n``` js\r\n  client.log('127.0.0.1 - Theres no place like home', function (err, result) {\r\n    // Do something once you've logged\r\n  });\r\n```\r\n\r\nNote that the callback in the above example is optional, if you prefer the 'fire and forget' method of logging:\r\n\r\n``` js\r\n  client.log('127.0.0.1 - Theres no place like home');\r\n```\r\n\r\n### Logging with Tags\r\n\r\nIf you're using Loggly's [tags](https://www.loggly.com/docs/tags/) functionality, simply include an array of tags as the second argument to the `log` method:\r\n\r\n``` js\r\n  client.log('127.0.0.1 - Theres no place like home', [ 'dorothy' ], function (err, result) {\r\n    // Do something once you've logged\r\n  });\r\n```\r\n\r\n*note* Tags passed into the log function will be merged with any global tags you may have defined.\r\n\r\n\r\n### Logging Shallow JSON Objects as a String\r\nIn addition to logging pure strings it is also possible to pass shallow JSON object literals (i.e. no nested objects) to client.log(..) or input.log(..) methods, which will get converted into the [Loggly recommended string representation][sending-data]. So\r\n\r\n``` js\r\n  var source = {\r\n    foo: 1,\r\n    bar: 2,\r\n    buzz: 3\r\n  };\r\n\r\n  input.log(source);\r\n```\r\n\r\nwill be logged as:\r\n\r\n```\r\n  foo=1,bar=2,buzz=3\r\n```\r\n\r\n### Logging JSON Objects\r\nIt is also possible to log complex objects using the new JSON capabilities of Loggly. To enable JSON functionality in the client simply add 'json: true' to the configuration:\r\n\r\n``` js\r\n  var config = {\r\n    subdomain: \"your-subdomain\",\r\n    auth: {\r\n      username: \"your-username\",\r\n      password: \"your-password\"\r\n    },\r\n    json: true\r\n  };\r\n```\r\n\r\nWhen the json flag is enabled, objects will be converted to JSON using JSON.stringify before being transmitted to Loggly. So\r\n\r\n``` js\r\n  var source = {\r\n    foo: 1,\r\n    bar: 2,\r\n    buzz: {\r\n      sheep: 'jumped',\r\n      times: 10\r\n    }\r\n  };\r\n\r\n  input.log(source);\r\n```\r\n\r\nwill be logged as:\r\n\r\n``` json\r\n  { \"foo\": 1, \"bar\": 2, \"buzz\": {\"sheep\": \"jumped\", \"times\": 10 }}\r\n```\r\n\r\n### Logging arrays\r\nIt is possible to send arrays, which will result in one single request to Loggly.\r\n\r\n``` js\r\n  input.log([ {iam:'number 1'}, {iam:'number 2'} ])\r\n```\r\n\r\n### Searching\r\n[Searching][search-api] with node-loggly-bulk is easy. All you have to do is use the search() method defined on each Loggly client:\r\n\r\n``` js\r\n  var util = require('util');\r\n\r\n  client.search('404', function (err, results) {\r\n    // Inspect the result set\r\n    console.dir(results.events);\r\n  });\r\n```\r\n\r\nThe search() method can also take an Object parameter that allows you to set additional search parameters such as: rows, from, until, etc.\r\n\r\n``` js\r\n  var util = require('util');\r\n\r\n  client.search({ query: '404', rows: 10 })\r\n    .run(function (err, results) {\r\n      // Inspect the result set\r\n      console.dir(results.events);\r\n    });\r\n```\r\n\r\nSee the [Loggly search guide][search] for more details on how to effectively search through your Loggly logs.\r\n\r\n## Installation\r\n\r\n### Installing npm (node package manager)\r\n``` bash\r\n  $ curl http://npmjs.org/install.sh | sh\r\n```\r\n\r\n### Installing node-loggly-bulk\r\n``` bash\r\n  $ npm install node-loggly-bulk\r\n```\r\n\r\n## Run Tests\r\n\r\n### Run Tests by sending events to your Loggly Account\r\nAll of the node-loggly-bulk tests are written in [vows][vows], and cover all of the use cases described above. You will need to add your Loggly username, password, subdomain, and your loggly token to test/config.json before running tests.\r\n\r\n``` js\r\n  {\r\n    \"token\": \"your-really-long-token-you-got-when-you-created-an-http-input\",\r\n    \"subdomain\": \"your-subdomain\",\r\n    \"auth\": {\r\n      \"username\": \"your-username\",\r\n      \"password\": \"your-password\"\r\n    }\r\n  }\r\n```\r\n\r\nOnce you have valid Loggly credentials you can run tests with [vows][vows]:\r\n\r\n``` bash\r\n  $ npm test\r\n```\r\n### Run Tests with Mock HTTP Request\r\nTo mock the HTTP requests and run test cases in your local machine you can run the following command\r\n```bash\r\n  $ npm run test-as-mock\r\n```\r\n\r\n#### Author: [Charlie Robbins](http://www.github.com/indexzero)\r\n#### Contributors: [Marak Squires](http://github.com/marak), [hij1nx](http://github.com/hij1nx), [Kord Campbell](http://loggly.com), [Erik Hedenstr√∂m](http://github.com/ehedenst),\r\n\r\n[api]: http://www.loggly.com/docs/api-overview/\r\n[sending-data]: http://www.loggly.com/docs/api-sending-data/\r\n[search-api]: http://www.loggly.com/docs/api-retrieving-data/\r\n[search]: http://www.loggly.com/docs/search-overview/\r\n[vows]: http://vowsjs.org\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/loggly/node-loggly-bulk.git"
  },
  "scripts": {
    "pretest": "common lib/**/*.js lib/*.js test/helpers.js",
    "pretest-as-mock": "common lib/**/*.js lib/*.js test-as-mock/helpers.js",
    "test": "vows test/*-test.js --spec",
    "test-as-mock": "vows test-as-mock/*-test.js --spec"
  },
  "version": "2.0.0"
}
