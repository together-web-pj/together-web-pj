{
  "_args": [
    [
      {
        "raw": "i18next-browser-languagedetector@^2.0.0",
        "scope": null,
        "escapedName": "i18next-browser-languagedetector",
        "name": "i18next-browser-languagedetector",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/home/user/work/version/reaction"
    ]
  ],
  "_from": "i18next-browser-languagedetector@>=2.0.0 <3.0.0",
  "_id": "i18next-browser-languagedetector@2.0.0",
  "_inCache": true,
  "_location": "/i18next-browser-languagedetector",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/i18next-browser-languagedetector-2.0.0.tgz_1497638612903_0.11066822498105466"
  },
  "_npmUser": {
    "name": "jamuhl",
    "email": "jan.muehlemann@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "i18next-browser-languagedetector@^2.0.0",
    "scope": null,
    "escapedName": "i18next-browser-languagedetector",
    "name": "i18next-browser-languagedetector",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/i18next-browser-languagedetector/-/i18next-browser-languagedetector-2.0.0.tgz",
  "_shasum": "4d9df2bd1a5deda3c8c0a6d3db62d50388b9eedd",
  "_shrinkwrap": null,
  "_spec": "i18next-browser-languagedetector@^2.0.0",
  "_where": "/home/user/work/version/reaction",
  "author": {
    "name": "Jan MÃ¼hlemann",
    "email": "jan.muehlemann@gmail.com",
    "url": "https://github.com/jamuhl"
  },
  "bugs": {
    "url": "https://github.com/i18next/i18next-browser-languageDetector/issues"
  },
  "dependencies": {},
  "description": "language detector used in browser environment for i18next",
  "devDependencies": {
    "babel-cli": "6.7.7",
    "babel-core": "6.7.7",
    "babel-eslint": "6.0.3",
    "babel-preset-es2015": "6.6.0",
    "babel-preset-es2015-native-modules": "^6.6.0",
    "babel-preset-es2015-rollup": "1.1.1",
    "babel-preset-stage-0": "6.5.0",
    "eslint": "2.8.0",
    "eslint-config-airbnb": "7.0.0",
    "mkdirp": "0.5.1",
    "rimraf": "2.5.2",
    "rollup": "0.25.8",
    "rollup-plugin-babel": "2.4.0",
    "rollup-plugin-node-resolve": "1.7.1",
    "rollup-plugin-uglify": "0.2.0",
    "yargs": "4.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "4d9df2bd1a5deda3c8c0a6d3db62d50388b9eedd",
    "tarball": "https://registry.npmjs.org/i18next-browser-languagedetector/-/i18next-browser-languagedetector-2.0.0.tgz"
  },
  "gitHead": "cb356a4d01e18f3d51b52ea1091ad20230b202d2",
  "homepage": "https://github.com/i18next/i18next-browser-languageDetector",
  "jsnext:main": "dist/es/index.js",
  "keywords": [
    "i18next",
    "i18next-languageDetector"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "adrai",
      "email": "adriano@raiano.ch"
    },
    {
      "name": "jamuhl",
      "email": "jan.muehlemann@gmail.com"
    }
  ],
  "name": "i18next-browser-languagedetector",
  "optionalDependencies": {},
  "readme": "# Introduction\n\n[![npm version](https://img.shields.io/npm/v/i18next-browser-languagedetector.svg?style=flat-square)](https://www.npmjs.com/package/i18next-browser-languagedetector)\n[![Bower](https://img.shields.io/bower/v/i18next-browser-languagedetector.svg)]()\n[![David](https://img.shields.io/david/i18next/i18next-browser-languagedetector.svg?style=flat-square)](https://david-dm.org/i18next/i18next-browser-languagedetector)\n\nThis is a i18next language detection plugin use to detect user language in the browser with support for:\n\n- cookie\n- localStorage\n- navigator\n- querystring\n- htmlTag\n\n# Getting started\n\nSource can be loaded via [npm](https://www.npmjs.com/package/i18next-browser-languagedetector), bower or [downloaded](https://github.com/i18next/i18next-browser-languagedetector/blob/master/i18nextBrowserLanguageDetector.min.js) from this repo.\n\n```\n# npm package\n$ npm install i18next-browser-languagedetector\n\n# bower\n$ bower install i18next-browser-languagedetector\n```\n\n- If you don't use a module loader it will be added to `window.i18nextBrowserLanguageDetector`\n\nWiring up:\n\n```js\nimport i18next from 'i18next';\nimport LngDetector from 'i18next-browser-languagedetector';\n\ni18next\n  .use(LngDetector)\n  .init(i18nextOptions);\n```\n\nAs with all modules you can either pass the constructor function (class) to the i18next.use or a concrete instance.\n\n## Detector Options\n\n```js\n{\n  // order and from where user language should be detected\n  order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag'],\n\n  // keys or params to lookup language from\n  lookupQuerystring: 'lng',\n  lookupCookie: 'i18next',\n  lookupLocalStorage: 'i18nextLng',\n\n  // cache user language on\n  caches: ['localStorage', 'cookie']\n\n  // optional expire and domain for set cookie\n  cookieMinutes: 10,\n  cookieDomain: 'myDomain',\n\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement\n}\n```\n\nOptions can be passed in:\n\n**preferred** - by setting options.detection in i18next.init:\n\n```js\nimport i18next from 'i18next';\nimport LngDetector from 'i18next-browser-languagedetector';\n\ni18next\n  .use(LngDetector)\n  .init({\n    detection: options\n  });\n```\n\non construction:\n\n```js\n  import LngDetector from 'i18next-browser-languagedetector';\n  const lngDetector = new LngDetector(null, options);\n```\n\nvia calling init:\n\n```js\n  import LngDetector from 'i18next-browser-languagedetector';\n  const lngDetector = new LngDetector();\n  lngDetector.init(options);\n```\n\n## Adding own detection functionality\n\n### interface\n\n```js\nexport default {\n  name: 'myDetectorsName',\n\n  lookup(options) {\n    // options -> are passed in options\n    return 'en';\n  },\n\n  cacheUserLanguage(lng, options) {\n    // options -> are passed in options\n    // lng -> current language, will be called after init and on changeLanguage\n\n    // store it\n  }\n};\n```\n\n\n### adding it\n\n```js\n  import LngDetector from 'i18next-browser-languagedetector';\n  const lngDetector = new LngDetector();\n  lngDetector.addDetector(myDetector);\n\n  i18next\n    .use(lngDetector)\n    .init({\n      detection: options\n    });\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/i18next/i18next-browser-languageDetector.git"
  },
  "scripts": {
    "build": "npm run clean && npm run build:cjs && npm run build:es && npm run build:umd && npm run copy",
    "build:amd": "rollup -c rollup.config.js --format amd && rollup -c rollup.config.js --format umd --uglify",
    "build:cjs": "babel src --out-dir dist/commonjs",
    "build:es": "BABEL_ENV=jsnext babel src --out-dir dist/es",
    "build:iife": "rollup -c rollup.config.js --format iife && rollup -c rollup.config.js --format iife --uglify",
    "build:umd": "rollup -c rollup.config.js --format umd && rollup -c rollup.config.js --format umd --uglify",
    "clean": "rimraf dist && mkdirp dist",
    "copy": "cp ./dist/umd/i18nextBrowserLanguageDetector.min.js ./i18nextBrowserLanguageDetector.min.js && cp ./dist/umd/i18nextBrowserLanguageDetector.js ./i18nextBrowserLanguageDetector.js",
    "postversion": "git push && git push --tags",
    "preversion": "npm run build && git push"
  },
  "version": "2.0.0"
}
