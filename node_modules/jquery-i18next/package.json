{
  "_args": [
    [
      {
        "raw": "jquery-i18next@^1.2.0",
        "scope": null,
        "escapedName": "jquery-i18next",
        "name": "jquery-i18next",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "/home/user/work/version/reaction"
    ]
  ],
  "_from": "jquery-i18next@>=1.2.0 <2.0.0",
  "_id": "jquery-i18next@1.2.0",
  "_inCache": true,
  "_location": "/jquery-i18next",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/jquery-i18next-1.2.0.tgz_1480965397973_0.4601510742213577"
  },
  "_npmUser": {
    "name": "jamuhl",
    "email": "jan.muehlemann@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jquery-i18next@^1.2.0",
    "scope": null,
    "escapedName": "jquery-i18next",
    "name": "jquery-i18next",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/jquery-i18next/-/jquery-i18next-1.2.0.tgz",
  "_shasum": "8d03036bb8a9d6fd3dd0c5fb1fe8cad233bde2a3",
  "_shrinkwrap": null,
  "_spec": "jquery-i18next@^1.2.0",
  "_where": "/home/user/work/version/reaction",
  "author": {
    "name": "Jan MÃ¼hlemann",
    "email": "jan.muehlemann@gmail.com",
    "url": "https://github.com/jamuhl"
  },
  "bugs": {
    "url": "https://github.com/i18next/jquery-i18next/issues"
  },
  "dependencies": {},
  "description": "i18next plugin for jquery usage",
  "devDependencies": {
    "babel-cli": "6.11.4",
    "babel-core": "6.13.2",
    "babel-eslint": "6.1.2",
    "babel-preset-es2015": "6.13.2",
    "babel-preset-stage-0": "6.5.0",
    "eslint": "3.3.1",
    "eslint-config-airbnb": "10.0.1",
    "mkdirp": "0.5.1",
    "rimraf": "2.5.4",
    "rollup": "0.34.10",
    "rollup-plugin-babel": "2.6.1",
    "rollup-plugin-node-resolve": "2.0.0",
    "rollup-plugin-uglify": "1.0.1",
    "yargs": "5.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "8d03036bb8a9d6fd3dd0c5fb1fe8cad233bde2a3",
    "tarball": "https://registry.npmjs.org/jquery-i18next/-/jquery-i18next-1.2.0.tgz"
  },
  "gitHead": "baf69e562f594afb408d56ecbdef4c18da6e650e",
  "homepage": "https://github.com/i18next/jquery-i18next",
  "jsnext:main": "dist/es/index.js",
  "keywords": [
    "i18next",
    "internationalization",
    "i18n",
    "translation",
    "localization",
    "l10n",
    "globalization",
    "jquery",
    "jquery-plugin"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "adrai",
      "email": "adriano@raiano.ch"
    },
    {
      "name": "jamuhl",
      "email": "jan.muehlemann@gmail.com"
    }
  ],
  "name": "jquery-i18next",
  "optionalDependencies": {},
  "readme": "# Introduction\n\nSource can be loaded via [npm](https://www.npmjs.com/package/jquery-i18next), bower or [downloaded](https://github.com/i18next/jquery-i18next/blob/master/i18next-jquery.min.js) from this repo.\n\nIf you don't use a module loader it will be added to window.jqueryI18next\n\n```\n# npm package\n$ npm install jquery-i18next\n\n# bower\n$ bower install jquery-i18next\n```\n\nSimplifies i18next usage in projects built based on jquery, like:\n\npage source:\n\n```html\n<ul class=\"nav\">\n  <li><a href=\"#\" data-i18n=\"nav.home\"></a></li>\n  <li><a href=\"#\" data-i18n=\"nav.page1\"></a></li>\n  <li><a href=\"#\" data-i18n=\"nav.page2\"></a></li>\n</ul>\n```\n\nloaded resource file (locales/en/translation.json):\n\n```json\n{\n  \"nav\": {\n    \"home\": \"Home\",\n    \"page1\": \"Page One\",\n    \"page2\": \"Page Two\"\n  }\n}\n```\n\njavascript code:\n\n```js\n$(\".nav\").localize();\n\n// results in\n// <ul class=\"nav\">\n//  <li><a href=\"#\" data-i18n=\"nav.home\">Home</a></li>\n//  <li><a href=\"#\" data-i18n=\"nav.page1\">Page One</a></li>\n//  <li><a href=\"#\" data-i18n=\"nav.page2\">Page Two</a></li>\n// </ul>\n```\n\n## Initialize the plugin\n\n```js\njqueryI18next.init(i18nextInstance, $, {\n  tName: 't', // --> appends $.t = i18next.t\n  i18nName: 'i18n', // --> appends $.i18n = i18next\n  handleName: 'localize', // --> appends $(selector).localize(opts);\n  selectorAttr: 'data-i18n', // selector for translating elements\n  targetAttr: 'i18n-target', // data-() attribute to grab target element to translate (if diffrent then itself)\n  optionsAttr: 'i18n-options', // data-() attribute that contains options, will load/set if useOptionsAttr = true\n  useOptionsAttr: false, // see optionsAttr\n  parseDefaultValueFromContent: true // parses default values from content ele.val or ele.text\n});\n```\n\n## using options in translation function\n\n```js\n<a id=\"btn1\" href=\"#\" data-i18n=\"myKey\"></a>\n$(\"#btn1\").localize(options);\n```\n\nor\n\n```js\n<a id=\"btn1\" href=\"#\" data-i18n=\"myKey\" data-i18n-options=\"{ 'a': 'b' }\"></a>\n$(\"#btn1\").localize();\n```\n\n## usage of selector function\n\n### translate an element\n\n```js\n<a id=\"btn1\" href=\"#\" data-i18n=\"myKey\"></a>\n$(\"#btn1\").localize(options);\n```\n\nmyKey: same key as used in i18next (optionally with namespaces)\noptions: same options as supported in i18next.t\n\n### translate children of an element\n\n```js\n<ul class=\"nav\">\n  <li><a href=\"#\" data-i18n=\"nav.home\"></a></li>\n  <li><a href=\"#\" data-i18n=\"nav.page1\"></a></li>\n  <li><a href=\"#\" data-i18n=\"nav.page2\"></a></li>\n</ul>\n$(\".nav\").localize();\n```\n\n### translate some inner element\n```js\n<div class=\"outer\" data-i18n=\"ns:key\" data-i18n-target=\".inner\">\n  <input class=\"inner\" type=\"text\"></input>\n</div>\n$(\".outer\").localize();\n```\n\n### set different attribute\n```js\n<a id=\"btn1\" href=\"#\" data-i18n=\"[title]key.for.title\"></a>\n$(\"#btn1\").localize();\n```\n\n### set multiple attributes\n```js\n<a id=\"btn1\" href=\"#\" data-i18n=\"[title]key.for.title;myNamespace:key.for.text\"></a>\n$(\"#btn1\").localize();\n```\n\n### set innerHtml attributes\n```js\n<a id=\"btn1\" href=\"#\" data-i18n=\"[html]key.for.title\"></a>\n$(\"#btn1\").localize();\n```\n\n### prepend content\n```js\n<a id=\"btn1\" href=\"#\" data-i18n=\"[prepend]key.for.title\">insert before me, please!</a>\n$(\"#btn1\").localize();\n```\n\n### append content\n```js\n<a id=\"btn1\" href=\"#\" data-i18n=\"[append]key.for.title\">append after me, please!</a>\n$(\"#btn1\").localize();\n```\n\n### set data\n```js\n<a id=\"btn1\" href=\"#\" data-i18n=\"[data-someDataAttribute]key.for.content\"></a>\n$(\"#btn1\").localize();\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/i18next/jquery-i18next.git"
  },
  "scripts": {
    "build": "npm run clean && npm run build:cjs && npm run build:es && npm run build:umd && npm run copy",
    "build:amd": "rollup -c rollup.config.js --format amd && rollup -c rollup.config.js --format umd --uglify",
    "build:cjs": "babel src --out-dir dist/commonjs",
    "build:es": "BABEL_ENV=jsnext babel src --out-dir dist/es",
    "build:iife": "rollup -c rollup.config.js --format iife && rollup -c rollup.config.js --format iife --uglify",
    "build:umd": "rollup -c rollup.config.js --format umd && rollup -c rollup.config.js --format umd --uglify",
    "clean": "rimraf dist && mkdirp dist",
    "copy": "cp ./dist/umd/jquery-i18next.min.js ./jquery-i18next.min.js && cp ./dist/umd/jquery-i18next.js ./jquery-i18next.js",
    "postversion": "git push && git push --tags",
    "preversion": "npm run build && git push"
  },
  "version": "1.2.0"
}
